x        <- seq(-5.0, 5.0, by=0.01)
# Compute the density for each element in x
# Set the degrees of freedom to be 14
density <- dt(x, df=14)
# Plot Density
plot(x, density, col="black", xlab="", ylab="Density",
type="l", lwd=3, cex=2,
xlim=c(-5.0, 5.0),
main="PDF of t (d.f. = 14) distribution")
# Get the 2.5th percentile
p_2.5th  <- qt(0.025,df=14)
# Get the 97.5th percentile
p_97.5th <- qt(0.975,df=14)
# Add vertical lines
abline(v=p_2.5th,  col="red", lwd=2, lty=2)
text(p_2.5th-1, 0.1, as.character(round(p_2.5th,2)), col="red", cex=1.5)
abline(v=p_97.5th, col="red", lwd=2, lty=2)
text(p_97.5th+1, 0.1, as.character(round(p_97.5th,2)), col="red", cex=1.5)
# Get the 2.5th percentile
p_2.5th  <- qt(0.025,df=14)
# Get the 97.5th percentile
p_97.5th <- qt(0.975,df=14)
?t.test()
#--------------
# EX1
#--------------
B_R <- c(51, 48, 52, 62, 64, 51, 55, 60)
A_R <- c(46, 45, 53, 48, 57, 55, 42, 50)
# Since the observations are form the same sites,
# this is the classic paired sample t-test
# H0: mu_D = 0
# The question is to examine whether the regulation
# reduces noise level, so we should use the one-sided p-value
# Check normal
shapiro.test(A_R-B_R)
t.test(A_R, B_R, alternative = "less", paired = T)
CO2_RS <- c(415, 385, 378, 398, 413, 359, 391, 410, 390, 402)
CO2_IS <- c(412, 361, 401, 432, 413, 385, 378, 412, 420, 400)
# Since the observations are form the same population
# we want to test the observations from two different methods
# It's paired sample t-test
# Check normal
shapiro.test(CO2_RS - CO2_IS)
t.test(CO2_RS, CO2_IS, alternative = "two.sided", paired = T)
#--------------
# EX1
#--------------
B_R <- c(51, 48, 52, 62, 64, 51, 55, 60)
A_R <- c(46, 45, 53, 48, 57, 55, 42, 50)
# Since the observations are form the same sites,
# this is the classic paired sample t-test
# H0: mu_D = 0
# The question is to examine whether the regulation
# reduces noise level, so we should use the one-sided p-value
# Check normal
shapiro.test(A_R-B_R)
t.test(A_R, B_R, alternative = "less", paired = T)
#--------------
# EX2
#--------------
CO2_RS <- c(415, 385, 378, 398, 413, 359, 391, 410, 390, 402)
CO2_IS <- c(412, 361, 401, 432, 413, 385, 378, 412, 420, 400)
# Since the observations are form the same population
# we want to test the observations from two different methods
# It's paired sample t-test
# Check normal
shapiro.test(CO2_RS - CO2_IS)
t.test(CO2_RS, CO2_IS, alternative = "two.sided", paired = T)
100*10*12
12*2000*1024/100
12*200*1024/100
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
plot(T, HCHO, type="l")
plot(T, HCHO, type="o")
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
HCHO
plot(T, HCHO, type="p")
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)
plot(T, HCHO, type="p")
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)*runif(100,0.95,1.05)
plot(T, HCHO, type="p")
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)*runif(100,0.95,1.05)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.20*T-4)*runif(100,0.95,1.05)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)*runif(100,0.95,1.05)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)*runif(100,0.9,1.1)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
lm <- reg(log(delta_HCHO) ~ delta_T)
summary(lm)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
reg <- lm(log(delta_HCHO) ~ delta_T)
summary(lm)
reg
summary(reg)
delta_T
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T     <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
reg <- lm(log(delta_HCHO) ~ delta_T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(2*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T     <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
reg <- lm(log(delta_HCHO) ~ delta_T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.8*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T     <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
reg <- lm(log(delta_HCHO) ~ delta_T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_log_HCHO <- log(HCHO)-mean(log(HCHO))
delta_T     <- T- T_ave
plot(delta_T, delta_log_HCHO)
abline(h=0)
abline(v=0)
reg <- lm(delta_log_HCHO ~ delta_T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_log_HCHO <- log(HCHO)-mean(log(HCHO))
delta_T     <- T- T_ave
plot(delta_T, delta_log_HCHO)
abline(h=0)
abline(v=0)
reg <- lm(delta_log_HCHO ~ delta_T)
summary(reg)
HCHO <- exp(0.2*T-4)*runif(100,0.9,1.2)
HCHO
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)*runif(100,0.9,1.2)
plot(T, HCHO)
reg <- lm(log(HCHO) ~ T)
summary(reg)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_log_HCHO <- log(HCHO)-mean(log(HCHO))
delta_T     <- T- T_ave
plot(delta_T, delta_log_HCHO)
abline(h=0)
abline(v=0)
reg <- lm(delta_log_HCHO ~ delta_T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)*runif(100,0.8,1.3)
plot(T, HCHO)
reg <- lm(log(HCHO) ~ T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)*runif(100,0.8,1.3)
plot(T, HCHO)
reg <- lm(log(HCHO) ~ T)
summary(reg)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_log_HCHO <- log(HCHO)-mean(log(HCHO))
delta_T     <- T- T_ave
plot(delta_T, delta_log_HCHO)
abline(h=0)
abline(v=0)
reg <- lm(delta_log_HCHO ~ delta_T)
summary(reg)
plot(T, HCHO, type="p")
(283)^2.03*exp(636/283)/(413)^2.03*exp(636/413)
(283)^2.03*exp(636/283)/((413)^2.03*exp(636/413))
exp(0.11*303)/exp(0.11*302)
1/(283)^2.03*exp(636/283)/((413)^2.03*exp(636/413))
1/0.9418181
log(0.9)
T <- rnorm(100, 20, 30)
HCHO <- 1.5E16 + 9.0E14*T
plot(T, HCHO)
plot(T, log(HCHO))
HCHO
T
T <- runif(100, 20, 30)
HCHO <- 1.5E16 + 9.0E14*T
plot(T, HCHO)
plot(T, log(HCHO))
reg <- lm(log(HCHO) ~ T)
summary(reg)
1.88e-17*8.85e-12*1e-6^2*300e3
3*pi*6/8*8.85e-12*1e-12*300*1e3
3*pi*6/8*8.85e-2*1.0e-12*300*1e3
1/1.6022e-19
3*pi*6/8*8.85e-2*1.0e-12*300*1e3*1/1.6022e-19
3*pi*6/8*8.85e-12*1.0e-12*300*1e3*1/1.6022e-19
log(0.1)/log(0.01)
500*50*12/1e4
400*50*12/1e4
350*50*12/1e4
300*50*12/1e4
300*55*12/1e4
2500*2*4*2
300*60*12/1e4
300*750*12/1e4
300*70*12/1e4
2000*2*4*2
6/8*8.85e-12*10e-6*(300e3)^2*10e-6/1.8e-5
6/8*8.85e-12*10e-6*(300e3)^2/1.8e-5
1-exp(-1*400*0.033/10)
log(1-0.95)/log(1-0.73)
log10
log(10)
log(1-0.95)/log(1-0.73)*400
ln(1-0.99)/ln(1-0.90)
log(1-0.99)/log(1-0.90)
setwd("D://ese335")
rmarkdown::render_site()
rmarkdown::render_site()
# Sub-samples
Control  <- c(0.64, 0.91, 0.84, 0.41, 1.58, 0.48, 0.88, 0.74, 1.09, 1.28)
P1       <- c(1.20, 1.17, 0.76, 0.92, 0.65, 1.14, 1.05, 1.28, 0.89, 1.06)
P2       <- c(0.25, 1.31, 0.43, 1.18, 1.02, 0.83, 1.02, 0.66, 0.70, 0.83)
P3       <- c(0.63, 0.30, 0.49, 0.01, 0.63, 0.69, 0.68, 0.34, 1.09, 0.42)
# Make data frame
Cd_data  <- data.frame(Cd=c(Control, P1, P2, P3),
group=c(rep("Control", length(Control)),
rep("Plant 1", length(P1)),
rep("Plant 2", length(P2)),
rep("Plant 3", length(P3)) ))
res_aov <- aov(Cd ~ group, data=Cd_data)
summary(res_aov)
TukeyHSD(anova_one_way)
TukeyHSD(res_aov)
52*4/12+52
52*4/12+52+0.5*12+6
52*4/12+52+0.75*12*2
?TukeyHSD
# Post-hoc test with the Hukey test
TukeyHSD(res_aov,ordered = TRUE)
plot(TukeyHSD(res_aov))
plot(TukeyHSD(res_aov,ordered = TRUE))
?plot
# Sub-samples
Control  <- c(0.64, 0.91, 0.84, 0.41, 1.58, 0.48, 0.88, 0.74, 1.09, 1.28)
P1       <- c(1.20, 1.17, 0.76, 0.92, 0.65, 1.14, 1.05, 1.28, 0.89, 1.06)
P2       <- c(0.25, 1.31, 0.43, 1.18, 1.02, 0.83, 1.02, 0.66, 0.70, 0.83)
P3       <- c(0.63, 0.30, 0.49, 0.01, 0.63, 0.69, 0.68, 0.34, 1.09, 0.42)
# Make data frame
Cd_data  <- data.frame(Cd=c(Control, P1, P2, P3),
group=c(rep("Control", length(Control)),
rep("Plant 1", length(P1)),
rep("Plant 2", length(P2)),
rep("Plant 3", length(P3)) ))
# Compare boxplots
ggplot(Cd_data, aes(x=group, y=Cd, fill=group)) +
geom_boxplot() +
labs(title="Soil Cd concentrations under different conditions",
x="Group", y="Cd concentration [mg/kg]") +
theme_classic()
# Perform the one-way ANOVA
res_aov <- aov(Cd ~ group, data=Cd_data)
summary(res_aov)
# Post-hoc test with the Hukey test
TukeyHSD(res_aov)
# Plot the 95% (default) CI
plot(TukeyHSD(res_aov))
# Perform the one-way ANOVA
res_aov <- aov(Cd ~ group, data=Cd_data)
summary(res_aov)
# Post-hoc test with the Hukey test
TukeyHSD(res_aov)
# Plot the 95% (default) CI
plot(TukeyHSD(res_aov))
# Read csv
cd_data <- read.csv("cd.data.csv", header=T)
# Change to factor type
cd_data_tbl <- as_tibble(cd_data) %>%
mutate(Chemical = factor(Chemical, ordered = TRUE)) %>%
mutate(Physical = factor(Physical, ordered = TRUE)) %>%
mutate(Plant = factor(Plant, ordered = TRUE))
aov(Cd ~ Chemical + Physical, data = cd_data_tbl)
cd_data_tbl
cd_data <- read.csv("cd.data.csv", header=T)
# Change to factor type using tibble
cd_data_tbl <- as_tibble(cd_data) %>%
mutate(Chemical = factor(Chemical, ordered = TRUE)) %>%
mutate(Physical = factor(Physical, ordered = TRUE)) %>%
mutate(Plant    = factor(Plant   , ordered = TRUE))
cd_data_tbl
# Read csv
cd_data <- read.csv("cd.data.csv", header=T)
cd_data
cd_data
aov(Cd ~ Chemical * Physical, data = cd_data_tbl)
# Read csv
cd_data <- read.csv("cd.data.csv", header=T)
# Change to factor type using tibble
cd_data_tbl <- as_tibble(cd_data) %>%
mutate(Chemical = factor(Chemical, ordered = TRUE)) %>%
mutate(Physical = factor(Physical, ordered = TRUE)) %>%
mutate(Plant    = factor(Plant   , ordered = TRUE))
# Quick check
glimpse(cd_data_tbl)
# Boxplot - Chemical
ggplot(cd_data_tbl, aes(x = Chemical, y = Cd, fill = Chemical)) +
geom_boxplot() +
theme_classic()
# Boxplot - Physical
ggplot(cd_data_tbl, aes(x = Physical, y = Cd, fill = Physical)) +
geom_boxplot() +
theme_classic()
# Boxplot - Plant
ggplot(cd_data_tbl, aes(x = Plant, y = Cd, fill = Plant)) +
geom_boxplot() +
theme_classic()
cd_data <- read.csv("cd.data.csv", header=T)
# Change to factor type using tibble
cd_data_tbl <- as_tibble(cd_data) %>%
mutate(Chemical = factor(Chemical, ordered = TRUE)) %>%
mutate(Physical = factor(Physical, ordered = TRUE)) %>%
mutate(Plant    = factor(Plant   , ordered = TRUE))
library(tidyr)
library(dplyr)
library(ggplot2)
# Read csv
cd_data <- read.csv("cd.data.csv", header=T)
cd_data
# Change to factor type using tibble
cd_data_tbl <- as_tibble(cd_data) %>%
mutate(Chemical = factor(Chemical, ordered = TRUE)) %>%
mutate(Physical = factor(Physical, ordered = TRUE)) %>%
mutate(Plant    = factor(Plant   , ordered = TRUE))
# Quick check
glimpse(cd_data_tbl)
# Boxplot - Chemical
ggplot(cd_data_tbl, aes(x = Chemical, y = Cd, fill = Chemical)) +
geom_boxplot() +
theme_classic()
# Boxplot - Physical
ggplot(cd_data_tbl, aes(x = Physical, y = Cd, fill = Physical)) +
geom_boxplot() +
theme_classic()
# Boxplot - Plant
ggplot(cd_data_tbl, aes(x = Plant, y = Cd, fill = Plant)) +
geom_boxplot() +
theme_classic()
cd_data_tbl
aov(Cd ~ Chemical * Physical, data = cd_data_tbl)
two_way_aov <- aov(Cd ~ Chemical * Physical, data = cd_data_tbl)
summary(two_way_aov)
aov(Cd ~ Chemical*Physical, data = cd_data_tbl)
two_way_aov <- aov(Cd ~ Chemical*Physical, data = cd_data_tbl)
summary(two_way_aov)
two_way_aov <- aov(Cd ~ Chemical*Plant, data = cd_data_tbl)
summary(two_way_aov)
TukeyHSD(two_way_additive)
runs.test(cd_data_tbl$Cd)
# Check normal distribution
shapiro.test(cd_data_tbl$Cd)
summary(two_way_additive)
setwd("D://ese335")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
# Sub-samples
Control  <- c(0.64, 0.91, 0.84, 0.41, 1.58, 0.48, 0.88, 0.74, 1.09, 1.28)
P1       <- c(1.20, 1.17, 0.76, 0.92, 0.65, 1.14, 1.05, 1.28, 0.89, 1.06)
P2       <- c(0.25, 1.31, 0.43, 1.18, 1.02, 0.83, 1.02, 0.66, 0.70, 0.83)
P3       <- c(0.63, 0.30, 0.49, 0.01, 0.63, 0.69, 0.68, 0.34, 1.09, 0.42)
# Make data frame
Cd_data  <- data.frame(Cd=c(Control, P1, P2, P3),
group=c(rep("Control", length(Control)),
rep("Plant 1", length(P1)),
rep("Plant 2", length(P2)),
rep("Plant 3", length(P3)) ))
# Compare boxplots
ggplot(Cd_data, aes(x=group, y=Cd, fill=group)) +
geom_boxplot() +
labs(title="Soil Cd concentrations under different conditions",
x="Group", y="Cd concentration [mg/kg]") +
theme_classic()
# Perform the one-way ANOVA
res_aov <- aov(Cd ~ group, data=Cd_data)
summary(res_aov)
res_aov <- aov(Cd ~ group, data=Cd_data)
summary(res_aov)
TukeyHSD(res_aov)
plot(TukeyHSD(res_aov))
plot(TukeyHSD(res_aov))
# Change to factor type using tibble
cd_data_tbl <- as_tibble(cd_data) %>%
mutate(Chemical = factor(Chemical, ordered = TRUE)) %>%
mutate(Physical = factor(Physical, ordered = TRUE)) %>%
mutate(Plant    = factor(Plant   , ordered = TRUE))
cd_data_tbl
# Quick check
glimpse(cd_data_tbl)
# Boxplot - Physical
ggplot(cd_data_tbl, aes(x = Physical, y = Cd, fill = Physical)) +
geom_boxplot() +
theme_classic()
rmarkdown::render_site()
