legend.key.size = 2,
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
map1 +
geom_point(data=sisquoc, aes(x=lon, y=lat, fill=type, shape=type),
color="white", cex=5.5) + # plot the points
scale_fill_manual(values = c("red", "blue", "green"),
labels=c("Background", "Rural","Urban"), name=NULL) +
scale_shape_manual(values = c(21,22,23),
labels=c("Background", "Rural","Urban"), name=NULL) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
base = get_map(location=sbbox, zoom=11, maptype="terrain")
map1 <- ggmap(base)
map1 +
geom_point(data=sisquoc, aes(x=lon, y=lat, fill=type, shape=type),
color="white", cex=5.5) + # plot the points
scale_fill_manual(values = c("red", "blue", "green"),
labels=c("Background", "Rural","Urban"), name=NULL) +
scale_shape_manual(values = c(21,22,23),
labels=c("Background", "Rural","Urban"), name=NULL) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
base <- get_map(location=sbbox, zoom=9, maptype="terrain")
map1 <- ggmap(base)
map1 +
geom_point(data=sisquoc, aes(x=lon, y=lat, fill=type, shape=type),
color="white", cex=5.5) + # plot the points
scale_fill_manual(values = c("red", "blue", "green"),
labels=c("Background", "Rural","Urban"), name=NULL) +
scale_shape_manual(values = c(21,22,23),
labels=c("Background", "Rural","Urban"), name=NULL) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
map1 <- ggmap(base)
map1 +
geom_point(data=sisquoc, aes(x=lon, y=lat, fill=type, shape=type),
color="white", cex=5.5) + # plot the points
scale_fill_manual(values = c("red", "blue", "green"),
labels=c("Background", "Rural","Urban"), name=NULL) +
scale_shape_manual(values = c(21,22,23),
labels=c("Background", "Rural","Urban"), name=NULL) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
base <- get_map(location=sbbox, zoom=8, maptype="terrain-background")
map1 <- ggmap(base)
map1 +
geom_point(data=sisquoc, aes(x=lon, y=lat, fill=type, shape=type),
color="white", cex=5.5) + # plot the points
scale_fill_manual(values = c("red", "blue", "green"),
labels=c("Background", "Rural","Urban"), name=NULL) +
scale_shape_manual(values = c(21,22,23),
labels=c("Background", "Rural","Urban"), name=NULL) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
map1 +
geom_point(data=sisquoc, aes(x=lon, y=lat, fill=type, shape=type),
color="white", cex=5.5) + # plot the points
scale_fill_manual(values = c("red", "blue", "green"),
labels=c("Background", "Rural","Urban"), name=NULL) +
scale_shape_manual(values = c(21,22,25),
labels=c("Background", "Rural","Urban"), name=NULL) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
map1 +
geom_point(data=sisquoc, aes(x=lon, y=lat, fill=type, shape=type),
color="white", cex=5.5) + # plot the points
scale_fill_manual(values = c("red", "blue", "green"),
labels=c("Background", "Rural","Urban"), name=NULL) +
scale_shape_manual(values = c(21,22,26),
labels=c("Background", "Rural","Urban"), name=NULL) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
map1 +
geom_point(data=sisquoc, aes(x=lon, y=lat, fill=type, shape=type),
color="white", cex=5.5) + # plot the points
scale_fill_manual(values = c("red", "blue", "green"),
labels=c("Background", "Rural","Urban"), name=NULL) +
scale_shape_manual(values = c(21,22,20),
labels=c("Background", "Rural","Urban"), name=NULL) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
map1 +
geom_point(data=sisquoc, aes(x=lon, y=lat, fill=type, shape=type),
color="white", cex=5.5) + # plot the points
scale_fill_manual(values = c("red", "blue", "green"),
labels=c("Background", "Rural","Urban"), name=NULL) +
scale_shape_manual(values = c(21,22,24),
labels=c("Background", "Rural","Urban"), name=NULL) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
Mangkhut_data <- read.table("D://Mangkhut.txt")
Mangkhut_data
Mangkhut_lat <- Mangkhut_data$V4*0.1
Mangkhut_lon <- Mangkhut_data$V5*0.1
Mangkhut_pressure <- Mangkhut_data$V6
Mangkhut_speed <- Mangkhut_data$V7*0.514
Mangkhut_data_new <- data.frame(lat=Mangkhut_lat,lon=Mangkhut_lon,
pressure=Mangkhut_pressure, speed=Mangkhut_speed)
Mangkhut_data_new
sbbox   <- make_bbox(lon = Mangkhut_data_new$lon, lat = Mangkhut_data_new$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=5, maptype="terrain-background")
map1 <- ggmap(base)
sbbox   <- make_bbox(lon = Mangkhut_data_new$lon, lat = Mangkhut_data_new$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=5, maptype="terrain-background")
map1 <- ggmap(base)
#------------------
sbbox   <- make_bbox(lon = Mangkhut_data_new$lon, lat = Mangkhut_data_new$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=6, maptype="terrain-background")
map1 <- ggmap(base)
sbbox
sbbox   <- make_bbox(lon = Mangkhut_data_new$lon, lat = Mangkhut_data_new$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=6, maptype="terrain-background")
map1 <- ggmap(base)
Site_name <- c("SUSTech", "Longhua", "Xichong", "Baoan", "Kuiyong")
Site_lon  <- c(114.06667,114.02200,114.56111,113.89606,114.42824)
Site_lat  <- c(22.61667,22.72882,22.48077,22.53965,22.63427)
Site_type <- c("Urban", "Urban", "Background", "Urban", "Rural")
sisquoc <- data.frame(name=Site_name, lon=Site_lon, lat=Site_lat, type=Site_type)
sbbox   <- make_bbox(lon = sisquoc$lon, lat = sisquoc$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
base <- get_map(location=sbbox, zoom=8, maptype="terrain-background")
base <- get_map(location=sbbox, zoom=9, maptype="terrain-background")
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
mi_counties <- map_data("world") %>%
select(lon = long, lat, group, id = subregion)
head(mi_counties)
?map_data
map_data("world")
mi_counties <- map_data("world") %>%
select(lon = long, lat, group)
head(mi_counties)
?select
ggmap(map_data("world"))
ggplot(map_data("world"), aes(lon, lat)) +
geom_point(size = .25, show.legend = FALSE) +
coord_quickmap()
ggplot(map_data("world"), aes(long, lat)) +
geom_point(size = .25, show.legend = FALSE) +
coord_quickmap()
ggplot(map_data("world"), aes(long, lat)) +
geom_point(size = .25, show.legend = FALSE) +
coord_sf(xlim = c(150.97, 151.3), ylim = c(-33.98, -33.79)) +
coord_quickmap()
Site_name <- c("SUSTech", "Longhua", "Xichong", "Baoan", "Kuiyong")
Site_lon  <- c(114.06667,114.02200,114.56111,113.89606,114.42824)
Site_lat  <- c(22.61667,22.72882,22.48077,22.53965,23.63427)
Site_type <- c("Urban", "Urban", "Background", "Urban", "Rural")
sisquoc <- data.frame(name=Site_name, lon=Site_lon, lat=Site_lat, type=Site_type)
sbbox   <- make_bbox(lon = sisquoc$lon, lat = sisquoc$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
map1 <- ggmap(base)
Site_name <- c("SUSTech", "Longhua", "Xichong", "Baoan", "Kuiyong")
Site_lon  <- c(114.06667,114.02200,114.56111,113.89606,114.42824)
Site_lat  <- c(22.61667,22.72882,22.48077,22.53965,23.63427)
Site_type <- c("Urban", "Urban", "Background", "Urban", "Rural")
sisquoc <- data.frame(name=Site_name, lon=Site_lon, lat=Site_lat, type=Site_type)
sbbox   <- make_bbox(lon = sisquoc$lon, lat = sisquoc$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
map1 <- ggmap(base)
setwd("D://ese335")
rmarkdown::render_site()
library(ggplot2)
library(plyr)
library(dplyr)
library(ggsn)
library(leafletCN)
library(raster)
library(ggmap)
# Location of the .shp file
Local_path <- "D://China_map/"
# Read china map, a shape file
China_map <- rgdal::readOGR(paste0(Local_path, "bou2_4p.shp"))
paste0(Local_path, "bou2_4p.shp")
# Location of the .shp file
Local_path <- "D://China_map/"
# Read china map, a shape file
China_map <- rgdal::readOGR(paste0(Local_path, "bou2_4p.shp"))
# Check the attributes
class(China_map)
names(China_map)
# Check the attributes, use the operator @
map_data <- China_map@data
head(map_data)
tail(map_data)
# Quick plot use ggplot
ggplot(China_map, aes(x = long, y = lat, group = group)) +
geom_path(color = "grey40") +
geom_polygon(fill = 'lightblue')
# Quick plot use ggplot
ggplot(China_map, aes(x = long, y = lat, group = group)) +
geom_path(color = "blue") +
geom_polygon(fill = 'red')
# Assign each province with an ID
China_map2     <- data.frame(China_map, id=seq(0:924)-1)
# Join two data sets by NAME
China_map_new  <- join(fortify(China_map), China_map2, type = "full")
China_map2
# Join two data sets by NAME
China_map_new  <- join(fortify(China_map), China_map2, type = "full")
China_map_new
# Plot the new shape file
ggplot(China_map_new, aes(x = long, y = lat, group = id, fill = NAME)) +
# Plot the border
geom_path(color = 'grey40') +
geom_polygon() +
# Using different colors
scale_fill_manual(values = rainbow(33), guide = F) +
coord_map()
?scale_fill_manual
?coord_map()
# Plot the new shape file
ggplot(China_map_new, aes(x = long, y = lat, group = id, fill = NAME)) +
# Plot the border
geom_path(color = 'grey40') +
geom_polygon() +
# Using different colors
scale_fill_manual(values = rainbow(33), guide = F) +
coord_map()
seq(0:924)
seq(0,924,by=1)
China_map2
?fortify
# Name in Chinese
# This is the same as the NAME in the original shape file
NAME    <- c("北京市"  , "天津市"   , "河北省"      , "山西省"   , "内蒙古自治区"    ,
"辽宁省"  , "吉林省"   , "黑龙江省"    , "上海市"   , "江苏省"          ,
"浙江省"  , "安徽省"   , "福建省"      , "江西省"   , "山东省"          ,
"河南省"  , "湖北省"   , "湖南省"      , "广东省"   , "广西壮族自治区"  ,
"海南省"  , "重庆市"   , "四川省"      , "贵州省"   , "云南省"          ,
"西藏自治区", "陕西省" , "甘肃省"      , "青海省"   , "宁夏回族自治区"  ,
"新疆维吾尔自治区"     , "台湾省"      , "香港特别行政区")
# Name in English accordingly
NAME_EN <- c("Beijing" , "Tianjin"  , "Hebei"       , "Shanxi"   , "Inner Mongolia"  ,
"Liaoning", "Jilin"    , "Heilongjiang", "Shanghai" , "Jiangsu"         ,
"Zhejiang", "Anhui"    , "Fujian"      , "Jiangxi"  , "Shandong"        ,
"Henan"   , "Hubei"    , "Hunan"       , "Guangdong", "Guangxi"         ,
"Hainan"  , "Chongqing", "Sichuan"     , "Guizhou"  , "Yunnan"          ,
"Tibet"   , "Shaanxi"  , "Gansu"       , "Qinghai"  , "Ningxia"         ,
"Xinjiang"             , "Taiwan"      , "Hong Kong"     )
# Population of each province, from the 2021 census
Pop     <- c(21893095  , 13866009   , 74610235      ,  34915616  ,  24049155         ,
42591407  , 24073453   , 31850088      ,  24870895  ,  84748016         ,
64567588  , 61027171   , 41540086      ,  45188635  , 101527453         ,
99365519  , 57752557   , 66444864      , 126012510  ,  50126804         ,
10081232  , 32054159   , 83674866      ,  38562148  ,  47209277         ,
3648100  , 39528999   , 25019831      ,   5923957  ,   7202654         ,
25852345               , 23561236      ,   7474200       )
# Make data frame
Popdata <- data.frame(NAME, NAME_EN, Pop)
Popdata
# Joint the data by NAME
China_map_pop <- join(China_map_new, Popdata, type = "full")
China_map_pop
China_map
China_map_pop
# Plot
ggplot(China_map_pop, aes(x = long, y = lat, group = id, fill = Pop)) +
geom_polygon() +
geom_path(color = "grey40") +
coord_map()
# Plot
ggplot(China_map_pop, aes(x = long, y = lat, group = id, fill = Pop)) +
geom_polygon() +
geom_path(color = "red") +
coord_map()
#
ggplot(China_map_pop, aes(x = long, y = lat, group = group, fill=Pop)) +
labs(fill = "Population")+
geom_polygon()+
geom_path(color = "grey40")+
# Try a different color theme
scale_fill_gradientn(colours=rev(heat.colors(20)),na.value="grey90",
guide = guide_colourbar(barwidth = 0.8, barheight = 10)) +
# Projects a portion of the earth
coord_map() +
# Change theme
theme_classic() +
# Change labels
labs(fill = "Population", x = "Longitude", y = "Latitude") +
# Add map scale
ggsn::scalebar(data = China_map_pop, dist = 500, dist_unit = "km",
border.size = 0.4, st.size = 2,
box.fill = c('black','white'),
transform = TRUE, model = "WGS84")
View(China_map_pop2)
## Extract Guangdong and Hong Kong from the data
GD_HK <- subset(China_map_pop, NAME == "广东省" | NAME == "香港特别行政区")
# Plot
ggplot(GD_HK,aes(x = long, y = lat, group = id)) +
# Polygon
geom_polygon(fill = "lightblue") +
# Border
geom_path(color = "lightblue") +
# Add one point: SUSTech (lat:22.59670, lon:113.98201)
geom_point(x = 113.98201, y = 22.59670, fill = NA) +
# Add label
annotate("text", x = 113.98201, y = 22.59670+0.25, label = "SUSTech") +
# Projects a portion of the earth
coord_map()
GD_HK
?iconv
# Change to a data frame, as required by the next step
China_map_pop2 <- as.data.frame(China_map_pop)
# Make a interactive map
geojsonMap(dat = China_map_pop2, mapName = "China",
# Use name and population as the key information
namevar = ~ NAME, valuevar = ~ Pop,
# Pop up information
popup =  paste0(China_map_pop2$NAME, ": ", China_map_pop2$Pop),
# Colors
palette = "Reds",
# Add legend
legendTitle = "Population")
China_map_pop2
# Read the tiff file
Wind_Nov <- raster("D://wc2.1_10m_wind_11.tif")
# Look at the raster attributes
Wind_Nov
# Quick plot using plot()
plot(Wind_Nov, main="Wind speed in Nov.")
# Set color
col <- terrain.colors(30)
# Quick using image()
image(Wind_Nov,  main="Wind speed in Nov.", col=col)
# Add contour lines
contour(Wind_Nov, add=T, col="red")
# Convert the raster to a date.frame
Wind_Nov_df <- as.data.frame(Wind_Nov, xy = TRUE)
# Check the data structure
str(Wind_Nov_df)
# Making plot
ggplot() +
geom_raster(data = Wind_Nov_df,
aes(x = x, y = y, fill = wc2.1_10m_wind_11)) +
# Change labels
labs(x="Latitude", y="Longitude") +
# Change theme
theme_bw() +
coord_equal() +
# Change legend
scale_fill_gradient( "Wind speed (m/s)", limits=c(0,20),
low = "white",
high = "red",
n.breaks = 10,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill") +
# Adjust the theme
theme(axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16, angle=90),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "right",
legend.key = element_blank()
) +
# Add a title
ggtitle("Wind Speed in Nov.")
# Site information
Site_name <- c("SUSTech", "Longhua", "Xichong", "Baoan", "Kuiyong")
Site_lon  <- c(114.06667,114.02200,114.56111,113.89606,114.42824)
Site_lat  <- c(22.61667,22.72882,22.48077,22.53965,22.63427)
Site_type <- c("Urban", "Urban", "Background", "Urban", "Rural")
# Make a data frame
Site_data <- data.frame(name=Site_name, lon=Site_lon, lat=Site_lat, type=Site_type)
Site_data
# Get the lat and lon range
Mapbox    <- make_bbox(lon = Site_data$lon, lat = Site_data$lat, f = .1)
Mapbox
# Get the lat and lon range
Mapbox    <- make_bbox(lon = Site_data$lon, lat = Site_data$lat, f = .1)
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Site information
Site_name <- c("SUSTech", "Longhua", "Xichong", "Baoan", "Kuiyong")
Site_lon  <- c(114.06667,114.02200,114.56111,113.89606,114.42824)
Site_lat  <- c(22.61667,22.72882,22.48077,22.53965,23.63427)
Site_type <- c("Urban", "Urban", "Background", "Urban", "Rural")
# Make a data frame
Site_data <- data.frame(name=Site_name, lon=Site_lon, lat=Site_lat, type=Site_type)
# Get the lat and lon range
Mapbox    <- make_bbox(lon = Site_data$lon, lat = Site_data$lat, f = .1)
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
?get_map
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Make a data frame
Site_data <- data.frame(name=Site_name, lon=Site_lon, lat=Site_lat, type=Site_type)
# Get the lat and lon range
Mapbox    <- make_bbox(lon = Site_data$lon, lat = Site_data$lat, f = .1)
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
Site_lat  <- c(22.61667,22.72882,22.48077,22.53965,22.63427)
# Make a data frame
Site_data <- data.frame(name=Site_name, lon=Site_lon, lat=Site_lat, type=Site_type)
# Get the lat and lon range
Mapbox    <- make_bbox(lon = Site_data$lon, lat = Site_data$lat, f = .1)
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Make a data frame
Site_data <- data.frame(name=Site_name, lon=Site_lon, lat=Site_lat, type=Site_type)
# Get the lat and lon range
Mapbox    <- make_bbox(lon = Site_data$lon, lat = Site_data$lat, f = .1)
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Pull the base map, ***you may need a VPN to download the base map ***
# The keyword zoom defines the map resolution
Base_map  <- get_map(location=Mapbox, zoom=10, maptype="terrain-background")
# Location of the .shp file
Local_path <- "D://China_map/"
# Read china map, a shape file
China_map <- rgdal::readOGR(paste0(Local_path, "bou2_4p.shp"))
# Check the attributes
class(China_map)
names(China_map)
# Check the attributes, use the operator @
map_data <- China_map@data
head(map_data)
tail(map_data)
# Change the coding of Chinese characters
map_data$NAME <- iconv(map_data$NAME, from="GBK", to="UTF-8")
# Replace the data
China_map$data <- map_data
# Check the attributes agian, use the operator @
map_data <- China_map@data
head(map_data)
tail(map_data)
