ggplot() +
geom_raster(data = DSM_hill_HARV_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11)) +
labs(x="Latitude", y="Longitude") +
theme_bw() +
coord_equal() +
scale_fill_gradient( "Wind speed (m/s)", limits=c(0,20),
low = "white",
high = "red",
n.breaks = 10,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill") +
theme(axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16, angle=90),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "right",
legend.key = element_blank()
) +
ggtitle("Wind Speed in Nov.")
ggplot() +
geom_raster(data = DSM_hill_HARV_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11)) +
labs(x="Latitude", y="Longitude") +
theme_bw() +
coord_equal() +
scale_fill_gradient( "Wind speed (m/s)", limits=c(0,20),
low = "blue",
high = "red",
n.breaks = 10,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill") +
theme(axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16, angle=90),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "right",
legend.key = element_blank()
) +
ggtitle("Wind Speed in Nov.")
ggplot() +
geom_raster(data = DSM_hill_HARV_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11)) +
labs(x="Latitude", y="Longitude") +
theme_bw() +
coord_equal() +
scale_fill_gradient( "Wind speed (m/s)", limits=c(0,20),
low = "white",
high = "red",
n.breaks = 10,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill") +
theme(axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16, angle=90),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "right",
legend.key = element_blank()
) +
ggtitle("Wind Speed in Nov.")
ggplot() +
geom_map(data = WorldData, map = WorldData,
aes(x = long, y = lat, group = group, map_id=region),
fill = "white", colour = "#7f7f7f", size=0.5) +
geom_raster(data = DSM_hill_HARV_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11)) +
labs(x="Latitude", y="Longitude")
WorldData <- map_data('world') %>% fortify
ggplot() +
geom_map(data = WorldData, map = WorldData,
aes(x = long, y = lat, group = group, map_id=region),
fill = "white", colour = "#7f7f7f", size=0.5) +
geom_raster(data = DSM_hill_HARV_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11)) +
labs(x="Latitude", y="Longitude")
ggplot() +
geom_map(data = WorldData, map = WorldData,
aes(x = long, y = lat, group = group, map_id=region))
ggplot() +
geom_map(data = WorldData, map = WorldData,
aes(x = long, y = lat, group = group, map_id=region),
fill = "white", colour = "#7f7f7f", size=0.5)
ggplot() +
geom_map(data = WorldData, map = WorldData,
aes(x = long, y = lat, group = group, map_id=region),
colour = "#7f7f7f", size=0.5)
ggplot() +
geom_map(data = WorldData, map = WorldData,
aes(x = long, y = lat, group = group, map_id=region),
)
ggplot() + +
geom_raster(data = DSM_hill_HARV_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11))
geom_map(data = WorldData, map = WorldData,
aes(x = long, y = lat, group = group, map_id=region),
fill = "white", colour = "#7f7f7f", size=0.5)
ggplot() + +
geom_raster(data = DSM_hill_HARV_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11))  +
geom_map(data = WorldData, map = WorldData,
aes(x = long, y = lat, group = group, map_id=region),
fill = "white", colour = "#7f7f7f", size=0.5)
wr <- map_data("world")
# Prepare a map of World
ggplot() +
ggplot(wr, aes(x = long, y = lat, group = group))
wr
wr <- map_data("world")
# Prepare a map of World
ggplot() +
ggplot(wr, aes(x = long, y = lat, group = group))
ggplot(wr, aes(x = long, y = lat, group = group)) +
geom_raster(data = DSM_hill_HARV_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11))
ggplot(wr, aes(x = long, y = lat, group = group))
wr
wr %>%
ggplot(aes(x = long, y = lat, group = group))
wr %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", colour = "black")
+
geom_raster(data = DSM_hill_HARV_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11))
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
ggplot() +
geom_raster(data = DSM_hill_HARV_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11)) +
labs(x="Latitude", y="Longitude") +
theme_bw() +
coord_equal() +
scale_fill_gradient( "Wind speed (m/s)", limits=c(0,20),
low = "white",
high = "red",
n.breaks = 10,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill") +
theme(axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16, angle=90),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "right",
legend.key = element_blank()
) +
ggtitle("Wind Speed in Nov.")
# Read tiff file
Wind_Nov <- raster("D://wc2.1_10m_wind_11.tif")
# Look at the raster attributes
Wind_Nov
# plot()
plot(Wind_Nov, main="Wind speed in Nov.")
# Use image()
# Set color
col <- terrain.colors(30)
image(Wind_Nov,  main="Wind speed in Nov.", col=col)
# Add contour lines
contour(Wind_Nov, add=T, col="red")
# Convert the raster to a date.frame
Wind_Nov_df <- as.data.frame(Wind_Nov, xy = TRUE)
str(Wind_Nov_df)
ggplot() +
geom_raster(data = Wind_Nov_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11)) +
labs(x="Latitude", y="Longitude") +
theme_bw() +
coord_equal() +
scale_fill_gradient( "Wind speed (m/s)", limits=c(0,20),
low = "white",
high = "red",
n.breaks = 10,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill") +
theme(axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16, angle=90),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "right",
legend.key = element_blank()
) +
ggtitle("Wind Speed in Nov.")
# Define the crop extent
Crop_box <- c(100,125,15,30)
# Crop the raster
Wind_Nov_crop <- crop(Wind_Nov, Crop_box)
# Plot cropped DEM
plot(Wind_Nov_crop, main="Wind speed in Nov.")
world <- map_data("world")
world
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region),
color = "white", fill = "lightgray", size = 0.1
)
geom_map(
data = world, map = world,
aes(long, lat, map_id = region),
color = "white", fill = "lightgray", size = 0.1
) +
geom_raster(data = DSM_hill_HARV_df ,
aes(x = x, y = y, fill = wc2.1_10m_wind_11)) +
labs(x="Latitude", y="Longitude") +
theme_bw()
Site_name <- c("SUSTech", "Longhua", "Xichong", "Baoan", "Kuiyong")
Site_lon  <- c(114.06667,114.02200,114.56111,113.89606,114.42824)
Site_lat  <- c(22.61667,22.72882,22.48077,22.53965,22.63427)
Site_type <- c("Urban", "Urban", "Background", "Urban", "Rural")
sisquoc <- data.frame(name=Site_name, lon=Site_lon, lat=Site_lat, type=Site_type)
sbbox   <- make_bbox(lon = sisquoc$lon, lat = sisquoc$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
# Site information
Site_name <- c("SUSTech", "Longhua", "Xichong", "Baoan", "Kuiyong")
Site_lon  <- c(114.06667,114.02200,114.56111,113.89606,114.42824)
Site_lat  <- c(22.61667,22.72882,22.48077,22.53965,22.63427)
Site_type <- c("Urban", "Urban", "Background", "Urban", "Rural")
sisquoc <- data.frame(name=Site_name, lon=Site_lon, lat=Site_lat, type=Site_type)
sbbox   <- make_bbox(lon = sisquoc$lon, lat = sisquoc$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
map1 <- ggmap(base)
map1 +
geom_point(data=sisquoc, aes(x=lon, y=lat, fill=type, shape=type),
color="white", cex=5.5) + # plot the points
scale_fill_manual(values = c("red", "blue", "green"),
labels=c("Background", "Rural","Urban"), name=NULL) +
scale_shape_manual(values = c(21,22,24),
labels=c("Background", "Rural","Urban"), name=NULL) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
Mangkhut_data <- read.table("D://Mangkhut.txt")
Mangkhut_lat <- Mangkhut_data$V4*0.1
Mangkhut_lon <- Mangkhut_data$V5*0.1
Mangkhut_pressure <- Mangkhut_data$V6
Mangkhut_speed <- Mangkhut_data$V7*0.514
Mangkhut_data_new <- data.frame(lat=Mangkhut_lat,lon=Mangkhut_lon,
pressure=Mangkhut_pressure, speed=Mangkhut_speed)
#------------------
sbbox   <- make_bbox(lon = Mangkhut_data_new$lon, lat = Mangkhut_data_new$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=6, maptype="terrain-background")
map1 <- ggmap(base)
map1 +
ggplot(map_data("world"), aes(long, lat)) +
geom_point(size = .25, show.legend = FALSE) +
coord_quickmap()
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 3, lineend = "round")
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 3, lineend = "round") +
scale_color_gradientn(colours = rainbow(7), breaks = seq(25, 200, by = 25))
Mangkhut_data_new
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 3, lineend = "round") +
scale_color_gradientn(colours = rainbow(20), breaks = seq(0, 60, by = 5))
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 3, lineend = "round") +
scale_color_gradientn(colours = "reds", breaks = seq(0, 60, by = 5))
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 3, lineend = "round") +
scale_color_gradientn(colours = "Reds", breaks = seq(0, 60, by = 5))
?scale_color_gradientn
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 3, lineend = "round") +
scale_colour_gradient(low = "white", high = "black", breaks = seq(0, 60, by = 5))
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 3, lineend = "round") +
scale_colour_gradient(low = "white", high = "black", breaks = seq(15, 60, by = 5))
sbbox   <- make_bbox(lon = Mangkhut_data_new$lon, lat = Mangkhut_data_new$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=5, maptype="terrain-background")
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 3, lineend = "round") +
scale_colour_gradient(low = "white", high = "black", breaks = seq(15, 60, by = 5))
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 3, lineend = "round") +
scale_colour_gradient(low = "white", high = "red", breaks = seq(15, 60, by = 5))
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 2, lineend = "round") +
scale_colour_gradient(low = "white", high = "red", breaks = seq(15, 60, by = 5))
?geom_path
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 2, lineend = "round") +
scale_colour_gradient(low = "white", high = "red", breaks = seq(15, 60, by = 5)) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 2, lineend = "round") +
scale_colour_gradient(low = "white", high = "red", breaks = seq(15, 60, by = 5)) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.width=5,
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
?theme
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 2, lineend = "round") +
scale_colour_gradient(low = "white", high = "red", breaks = seq(15, 60, by = 5)) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw()
?scale_colour_gradient
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 2, lineend = "round") +
scale_colour_gradient(low = "white", high = "red", breaks = seq(10, 60, by = 10)) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.width=5,
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 2, lineend = "round") +
scale_colour_gradient(low = "white", high = "red", breaks = seq(10, 60, by = 10)) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Air monitoring sites") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed), size = 2, lineend = "round") +
scale_colour_gradient(low = "white", high = "red", breaks = seq(10, 60, by = 10)) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Mangkhut path") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed, size=speed), size = 2, lineend = "round") +
scale_colour_gradient(low = "white", high = "red", breaks = seq(10, 60, by = 10)) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Mangkhut path") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
map1 +
geom_path(data = Mangkhut_data_new, aes(color = speed, size=speed), lineend = "round") +
scale_colour_gradient(low = "white", high = "red", breaks = seq(10, 60, by = 10)) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Mangkhut path") + # label the axes
theme_bw() +
theme(legend.position="bottom",
legend.key  = element_rect(colour = "white"),
axis.text   = element_text(size = rel(0.75)),
axis.text.x = element_text(angle=45, vjust=0.5))
?geom_path
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new,
aes(color = speed, size=speed),
lineend = "round") +
scale_colour_gradient(low = "white", high = "red",
breaks = seq(10, 60, by = 10)) +
coord_map() +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Mangkhut path") + # label the axes
theme_bw()
map1 <- ggmap(base)
map1 +
geom_path(data = Mangkhut_data_new,
aes(color = speed, size=speed),
lineend = "round") +
scale_colour_gradient(low = "white", high = "red",
breaks = seq(10, 60, by = 10)) +
# define shape/color scales
labs(x="Latitude", y="Longitude", title="Mangkhut path") + # label the axes
theme_bw()
Mangkhut_lat
Mangkhut_data <- read.table("D://Mangkhut.txt")
Mangkhut_lat <- Mangkhut_data$V4*0.1
Mangkhut_lon <- Mangkhut_data$V5*0.1
Mangkhut_pressure <- Mangkhut_data$V6
Mangkhut_speed <- Mangkhut_data$V7*0.514
# Make a data frame for ggplot
Mangkhut_data_new <- data.frame(lat=Mangkhut_lat,lon=Mangkhut_lon,
pressure=Mangkhut_pressure, speed=Mangkhut_speed)
# Get the domain
sbbox             <- make_bbox(lon = Mangkhut_data_new$lon,
lat = Mangkhut_data_new$lat, f = .1)
# Get the base map
Base_map          <- get_map(location=sbbox, zoom=5,
maptype="terrain-background")
# Plot base map
Map1              <- ggmap(base)
# Plot the path
Map1 +
# Path
geom_path(data = Mangkhut_data_new,
aes(size=speed),
lineend = "round") +
scale_colour_gradient(low = "white", high = "red",
breaks = seq(10, 60, by = 10)) +
# Change labels
labs(x="Latitude", y="Longitude", title="Typhoon Mangkhut Track") + # label the axes
theme_bw()
# Plot the path
Map1 +
# Path
geom_path(data = Mangkhut_data_new,
aes(color=speed),
lineend = "round") +
scale_colour_gradient(low = "white", high = "red",
breaks = seq(10, 60, by = 10)) +
# Change labels
labs(x="Latitude", y="Longitude", title="Typhoon Mangkhut Track") + # label the axes
theme_bw()
# Plot the path
Map1 +
# Path
geom_path(data = Mangkhut_data_new,
aes(color=speed), size=1.5,
lineend = "round") +
scale_colour_gradient(low = "white", high = "red",
breaks = seq(10, 60, by = 10)) +
# Change labels
labs(x="Latitude", y="Longitude", title="Typhoon Mangkhut Track") + # label the axes
theme_bw()
Site_name <- c("SUSTech", "Longhua", "Xichong", "Baoan", "Kuiyong")
Site_lon  <- c(114.06667,114.02200,114.56111,113.89606,114.42824)
Site_lat  <- c(22.61667,22.72882,22.48077,22.53965,25.63427)
Site_type <- c("Urban", "Urban", "Background", "Urban", "Rural")
sisquoc <- data.frame(name=Site_name, lon=Site_lon, lat=Site_lat, type=Site_type)
sbbox   <- make_bbox(lon = sisquoc$lon, lat = sisquoc$lat, f = .1)
sbbox
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
map1 <- ggmap(base)
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
# Read the data
Mangkhut_data       <- read.table("D://Mangkhut.txt")
base <- get_map(location=sbbox, zoom=10, maptype="terrain-background")
# Plot the path
Map1 +
# Path
geom_path(data = Mangkhut_data_new,
aes(color=speed), size=1.5,
lineend = "round") +
scale_colour_gradient("Max Wind Speed (m/s)", low = "white", high = "red",
breaks = seq(10, 60, by = 10)) +
# Change labels
labs(x="Latitude", y="Longitude", title="Typhoon Mangkhut Track") + # label the axes
theme_bw()
library(ggplot2)
ggplot(China_map, aes(x = long, y = lat, group = group)) +
geom_path(color = "grey40") +
geom_polygon(fill = 'lightblue')
Local_path <- "D://China_map/" # local the .shp file is stored
China_map <- rgdal::readOGR(paste0(Local_path, "bou2_4p.shp"))
ggplot(China_map, aes(x = long, y = lat, group = group)) +
geom_path(color = "grey40") +
geom_polygon(fill = 'lightblue')
ggplot(China_map, aes(x = long, y = lat, group = group)) +
geom_path(color = "grey40") +
geom_polygon(fill = group)
setwd("D://ese335")
rmarkdown::render_site()
?coord_map()
rmarkdown::render_site()
