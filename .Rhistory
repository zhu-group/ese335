COVID_tbl <- as_tibble(COVID_data)
#--------------------------------------------
# 1.3
# Get global daily new cases
COVID_tbl <- COVID_tbl %>%
mutate(dateRep = as.Date(dateRep,format='%d/%m/%Y')) %>%
group_by(dateRep) %>%
summarize(global_cases = sum(cases))
#--------------------------------------------
# 1.4
# Quick plot
plot(COVID_tbl$dateRep,COVID_tbl$global_cases,
type="l",xlab="Date",ylab="Global cases")
13*13/60
2*24*3600*3/1000
2*24*3600*1/1000
43333*0.02
43333*0.02*2*1.2
43333*0.02*(1+2*1.2)
43333*1*(1+2*1.2)
43333*(1+2*1.2)
43333*0.5*(1+2*1.2)
43333*0.55*(1+2*1.2)
43333*1.01*0.5*(1+2*1.2)
43333*1.8
43333*1.8*1.01
43333*1.2*1.01
43333*1.01
52*1.01/12*1.8
52*1.01/12*1.8*10000
52*1.01/12*3*10000
436197.11+39600.30+118381.3
43,767*12
43767*12
13*13/60
15*13/60
14*13/60
205/375*700
205/375*700+349/750*300
205/375*700+399/750*300
205/375*700+499/750*300
205/375*700+599/750*300
205/375*700+550/750*300
255/375*700+399/750*300
245/375*700+399/750*300
235/375*700+399/750*300
240/375*700+399/750*300
700*375
300/750
700/375
(700/375/(300/750))
375*0.6
375*0.7
205/375*700+550/750*300
205/375*700+540/750*300
205/375*700+545/750*300
205/375*700+350/750*300
235/375*700+350/750*300
245/375*700+350/750*300
250/375*700+350/750*300
245/375*700+350/750*300
250/375*700+350/750*300
250/375*700+360/750*300
240/375*700+360/750*300
245/375*700+360/750*300
250/375*700+360/750*300
250/375*700+350/750*300
250/375*700+350/750*300
7665*12
7665*13
5509+489
(44-72)/72
(167-139)/139
52*(1+3.8/12)+6+32
library(ggpubr)
library(nortest)
library(ggplot2)
# PM2.5 in 2019 Feb.
PM2.5_2019  <- c(53, 41, 26, 19, 26, 48, 64, 46, 42, 65, 53, 81, 51, 32, 44)
# PM2.5 in 2020 Feb.
PM2.5_2020  <- c(63, 33, 24, 19, 33, 49, 38, 28, 41, 36, 41, 43, 43, 23, 35)
# Sample difference
Diff        <- PM2.5_2020 - PM2.5_2019
# Get sample size, degrees of freedom, and sd
n           <- length(Diff)
df          <- n - 1
sd          <- sd(Diff)
# Make data frame
PM2.5_data <- data.frame(PM2.5 = c(PM2.5_2019, PM2.5_2020),
Year = c(rep("2019-02",n),rep("2020-02",n)))
# Compare boxplots
PM2.5_data %>%
ggplot(aes(x=as.character(Year), y=PM2.5)) +
geom_boxplot(fill="steelblue") +
labs(title="PM2.5 Distribution by Year", x="Year", y="ug/m3")
ggqqplot(Diff)
# Check normality, Shapiro-Wilk test
shapiro.test(Diff)
# Check normality, Shapiro-Wilk test
shapiro.test(Diff)
# SE of the difference
SE          <- sd/sqrt(n)
# Get t-ratio
t           <- mean(Diff)/SE
t
P_value     <- (1-pt(abs(t), df=df))*2
print(P_value)
##
t.test(PM2.5_2020, PM2.5_2019, alternative ="two-sided", paired = T)
##
t.test(PM2.5_2020, PM2.5_2019, alternative ="two.sided", paired = T)
# Make a vector from -5 to 5, with a step of 0.01
x        <- seq(-5.0, 5.0, by=0.01)
# Compute the density for each element in x
# Set the degrees of freedom to be 14
density <- dt(x, df=14)
# Plot Density
plot(x, density, col="black", xlab="", ylab="Density",
type="l", lwd=3, cex=2,
xlim=c(-5.0, 5.0),
main="PDF of t (d.f. = 14) distribution")
# Get the 2.5th percentile
p_2.5th  <- qt(0.025,df=14)
# Get the 97.5th percentile
p_97.5th <- qt(0.975,df=14)
# Add vertical lines
abline(v=p_2.5th,  col="red", lwd=2, lty=2)
text(p_2.5th-1, 0.1, as.character(round(p_2.5th,2)), col="red", cex=1.5)
abline(v=p_97.5th, col="red", lwd=2, lty=2)
text(p_97.5th+1, 0.1, as.character(round(p_97.5th,2)), col="red", cex=1.5)
# Get the 2.5th percentile
p_2.5th  <- qt(0.025,df=14)
# Get the 97.5th percentile
p_97.5th <- qt(0.975,df=14)
?t.test()
#--------------
# EX1
#--------------
B_R <- c(51, 48, 52, 62, 64, 51, 55, 60)
A_R <- c(46, 45, 53, 48, 57, 55, 42, 50)
# Since the observations are form the same sites,
# this is the classic paired sample t-test
# H0: mu_D = 0
# The question is to examine whether the regulation
# reduces noise level, so we should use the one-sided p-value
# Check normal
shapiro.test(A_R-B_R)
t.test(A_R, B_R, alternative = "less", paired = T)
CO2_RS <- c(415, 385, 378, 398, 413, 359, 391, 410, 390, 402)
CO2_IS <- c(412, 361, 401, 432, 413, 385, 378, 412, 420, 400)
# Since the observations are form the same population
# we want to test the observations from two different methods
# It's paired sample t-test
# Check normal
shapiro.test(CO2_RS - CO2_IS)
t.test(CO2_RS, CO2_IS, alternative = "two.sided", paired = T)
#--------------
# EX1
#--------------
B_R <- c(51, 48, 52, 62, 64, 51, 55, 60)
A_R <- c(46, 45, 53, 48, 57, 55, 42, 50)
# Since the observations are form the same sites,
# this is the classic paired sample t-test
# H0: mu_D = 0
# The question is to examine whether the regulation
# reduces noise level, so we should use the one-sided p-value
# Check normal
shapiro.test(A_R-B_R)
t.test(A_R, B_R, alternative = "less", paired = T)
#--------------
# EX2
#--------------
CO2_RS <- c(415, 385, 378, 398, 413, 359, 391, 410, 390, 402)
CO2_IS <- c(412, 361, 401, 432, 413, 385, 378, 412, 420, 400)
# Since the observations are form the same population
# we want to test the observations from two different methods
# It's paired sample t-test
# Check normal
shapiro.test(CO2_RS - CO2_IS)
t.test(CO2_RS, CO2_IS, alternative = "two.sided", paired = T)
100*10*12
12*2000*1024/100
12*200*1024/100
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
plot(T, HCHO, type="l")
plot(T, HCHO, type="o")
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
HCHO
plot(T, HCHO, type="p")
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)
plot(T, HCHO, type="p")
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)*runif(100,0.95,1.05)
plot(T, HCHO, type="p")
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)*runif(100,0.95,1.05)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.20*T-4)*runif(100,0.95,1.05)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)*runif(100,0.95,1.05)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)*runif(100,0.9,1.1)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
lm <- reg(log(delta_HCHO) ~ delta_T)
summary(lm)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
reg <- lm(log(delta_HCHO) ~ delta_T)
summary(lm)
reg
summary(reg)
delta_T
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T     <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
reg <- lm(log(delta_HCHO) ~ delta_T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(2*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T     <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
reg <- lm(log(delta_HCHO) ~ delta_T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.8*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_HCHO <- HCHO/HCHO_ave
delta_T     <- T- T_ave
plot(delta_T, log(delta_HCHO))
abline(h=0)
abline(v=0)
reg <- lm(log(delta_HCHO) ~ delta_T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_log_HCHO <- log(HCHO)-mean(log(HCHO))
delta_T     <- T- T_ave
plot(delta_T, delta_log_HCHO)
abline(h=0)
abline(v=0)
reg <- lm(delta_log_HCHO ~ delta_T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_log_HCHO <- log(HCHO)-mean(log(HCHO))
delta_T     <- T- T_ave
plot(delta_T, delta_log_HCHO)
abline(h=0)
abline(v=0)
reg <- lm(delta_log_HCHO ~ delta_T)
summary(reg)
HCHO <- exp(0.2*T-4)*runif(100,0.9,1.2)
HCHO
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)*runif(100,0.9,1.2)
plot(T, HCHO)
reg <- lm(log(HCHO) ~ T)
summary(reg)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_log_HCHO <- log(HCHO)-mean(log(HCHO))
delta_T     <- T- T_ave
plot(delta_T, delta_log_HCHO)
abline(h=0)
abline(v=0)
reg <- lm(delta_log_HCHO ~ delta_T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.2*T-4)*runif(100,0.8,1.3)
plot(T, HCHO)
reg <- lm(log(HCHO) ~ T)
summary(reg)
T    <- rnorm(100, 280, 5)
HCHO <- exp(0.02*T-4)*runif(100,0.8,1.3)
plot(T, HCHO)
reg <- lm(log(HCHO) ~ T)
summary(reg)
plot(T, HCHO, type="p")
HCHO_ave <- mean(HCHO)
T_ave <- mean(T)
delta_log_HCHO <- log(HCHO)-mean(log(HCHO))
delta_T     <- T- T_ave
plot(delta_T, delta_log_HCHO)
abline(h=0)
abline(v=0)
reg <- lm(delta_log_HCHO ~ delta_T)
summary(reg)
plot(T, HCHO, type="p")
(283)^2.03*exp(636/283)/(413)^2.03*exp(636/413)
(283)^2.03*exp(636/283)/((413)^2.03*exp(636/413))
exp(0.11*303)/exp(0.11*302)
1/(283)^2.03*exp(636/283)/((413)^2.03*exp(636/413))
1/0.9418181
log(0.9)
T <- rnorm(100, 20, 30)
HCHO <- 1.5E16 + 9.0E14*T
plot(T, HCHO)
plot(T, log(HCHO))
HCHO
T
T <- runif(100, 20, 30)
HCHO <- 1.5E16 + 9.0E14*T
plot(T, HCHO)
plot(T, log(HCHO))
reg <- lm(log(HCHO) ~ T)
summary(reg)
1.88e-17*8.85e-12*1e-6^2*300e3
3*pi*6/8*8.85e-12*1e-12*300*1e3
3*pi*6/8*8.85e-2*1.0e-12*300*1e3
1/1.6022e-19
3*pi*6/8*8.85e-2*1.0e-12*300*1e3*1/1.6022e-19
3*pi*6/8*8.85e-12*1.0e-12*300*1e3*1/1.6022e-19
log(0.1)/log(0.01)
500*50*12/1e4
400*50*12/1e4
350*50*12/1e4
300*50*12/1e4
300*55*12/1e4
2500*2*4*2
300*60*12/1e4
300*750*12/1e4
300*70*12/1e4
2000*2*4*2
6/8*8.85e-12*10e-6*(300e3)^2*10e-6/1.8e-5
6/8*8.85e-12*10e-6*(300e3)^2/1.8e-5
1-exp(-1*400*0.033/10)
log(1-0.95)/log(1-0.73)
log10
log(10)
log(1-0.95)/log(1-0.73)*400
ln(1-0.99)/ln(1-0.90)
log(1-0.99)/log(1-0.90)
SUSTEch <- c(42.33,39.53,44.23,42.67,40.63,39.30,40.33,38.77)
Otehr <- c(45.33,42.40,44.37,42.70,41.80,39.87,41.07,42.73,39.40,42.13,
38.93,37.70,37.63,36.60,35.73,32.27)
t.test(SUSTEch,Otehr)
t.test(SUSTEch-7,Otehr-7)
52*1.04
55*1.04
52*1.04*1.04*1.04
52*1.04*1.04*1.04*1.04
55*1.04*1.04*1.04*1.04
sum(c(127,134,35,88,184,35,23))
43767*1.8
43767*1.2
43767*1.4
43767*1.5
43767*1.6
43767*1.8
43767*3.4
43767*3.4+39600
43767*3.4+39600+52
43767*3.4+39600+520000
43767*3.4+39600+520000+60000
43767*1.8
43767*1.8+40000
43767*1.8+40000+3200000
43767*1.8+40000+3200000+30000
43767*1.8+40000+320000+30000
setwd("D://ese335")
rmarkdown::render_site()
library(datasets)
library(stats)
data(airquality)
# plotting the data to determine the linearity
plot(airquality, main="Matrix Scatterplot")
require(tidyverse)
ggpairs(airquality) # from GGAlly
library(ggplot2)
ggpairs(airquality) # from GGAlly
?ggpairs
??ggpairs
require(GGally)
ggpairs(airquality) # from GGAlly
airquality
ggpairs(airquality,columns=1:4) # from GGAlly
ggpairs(airquality,columns=1:4,aes(color=factor(Month))) # from GGAlly
str(airquality)
write.csv(airquality,file = "D://test.csv")
read.csv(airquality,file = "D://test.csv")
airquality <- read.csv(file = "D://test.csv", header=T)
airquality
ggpairs(airquality,columns=1:4,aes(color=factor(Month))) # from GGAlly
ggpairs(airquality,columns=1:4) # from GGAlly
pressure   <- rnorm(153,1000,5)
airquality2 <- cbind(airquality,pressure )
pressure
airquality2
pressure   <- round(rnorm(153,1000,5),1)
airquality2 <- cbind(airquality,pressure )
airquality2
write.csv(airquality2,file = "D://test.csv")
airquality2
write.csv(airquality2, file = "D://test2.csv")
airquality <- read.csv(file = "D://test2.csv", header=T)
Airquality <- read.csv(file = "D://test2.csv", header=T)
ggpairs(airquality,columns=1:5)
setwd("D://ese335")
setwd("D://ese335")
library(ggplot2)
library(GGally)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
library(GGally)
remove.packages("GGally", lib="~/R/win-library/4.0")
library(ggplot2)
